// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

using Scooters.DataAccess.Entities;

namespace Scooters.DataAccess.Migrations
{
    [DbContext(typeof(ScootersDbContext))]
    partial class ScootersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Scooters.DataAccess.Entities.AdminEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreationTime")
                    .HasColumnType("datetime2");

                b.Property<Guid>("ExternalId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("ModificationTime")
                    .HasColumnType("datetime2");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Surname")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Email")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PhoneNumber")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PasswordHash")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.HasIndex("ExternalId")
                    .IsUnique();

                b.ToTable("admins");
            });

            modelBuilder.Entity("Scooters.DataAccess.Entities.RentEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreationTime")
                    .HasColumnType("datetime2");

                b.Property<Guid>("ExternalId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("ModificationTime")
                    .HasColumnType("datetime2");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.Property<int>("ScooterId")
                    .HasColumnType("int");

                b.Property<DateTime>("Start")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("End")
                    .HasColumnType("datetime2");

                b.Property<double>("TotalPrice")
                    .HasColumnType("float");

                b.Property<int>("ReviewId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("UserId");
                b.HasIndex("ScooterId");
                b.HasIndex("ReviewId");

                b.HasIndex("ExternalId")
                    .IsUnique();

                b.ToTable("rents");
            });

            modelBuilder.Entity("Scooters.DataAccess.Entities.ReviewEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreationTime")
                    .HasColumnType("datetime2");

                b.Property<Guid>("ExternalId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("ModificationTime")
                    .HasColumnType("datetime2");

                b.Property<int>("RentId")
                    .HasColumnType("int");

                b.Property<string>("Text")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Rating")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("RentId");

                b.HasIndex("ExternalId")
                    .IsUnique();

                b.ToTable("reviews");
            });

            modelBuilder.Entity("Scooters.DataAccess.Entities.ScooterEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreationTime")
                    .HasColumnType("datetime2");

                b.Property<Guid>("ExternalId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("ModificationTime")
                    .HasColumnType("datetime2");

                b.Property<double>("Price")
                    .HasColumnType("float");

                b.Property<double>("ChargePercentage")
                    .HasColumnType("float");

                b.Property<string>("Location")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("ExternalId")
                    .IsUnique();

                b.ToTable("scooters");
            });

            modelBuilder.Entity("Scooters.DataAccess.Entities.UserEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreationTime")
                    .HasColumnType("datetime2");

                b.Property<Guid>("ExternalId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("ModificationTime")
                    .HasColumnType("datetime2");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Surname")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Email")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PhoneNumber")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PasswordHash")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("ExternalId")
                    .IsUnique();

                b.ToTable("users");
            });
#pragma warning restore 612, 618
        }
    }
}
